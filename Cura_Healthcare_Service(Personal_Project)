import time
from selenium import webdriver
from selenium.webdriver import ActionChains
from selenium.webdriver.common.by import By
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.select import Select

driver = webdriver.Chrome()
driver.get("https://katalon-demo-cura.herokuapp.com/")
driver.maximize_window()

driver.implicitly_wait(8)
class curaHealthCare:
    globals()
    def loginByProvidingValidCredentials():
        try:

            driver.find_element(By.XPATH,"//i[@class='fa fa-bars']").click()
            driver.find_element(By.XPATH,"//a[normalize-space()='Login']").click()
            driver.find_element(By.NAME,"username").send_keys("John Doe")
            driver.find_element(By.XPATH,"//input[@id='txt-password']").send_keys("ThisIsNotAPassword")
            driver.find_element(By.XPATH,"//button[@id='btn-login']").click()
            print("iteration-1 output: Login successful with valid data")
        except:
            print("iteration-1 output: Login unsuccessful")
        driver.find_element(By.XPATH,"//i[@class='fa fa-bars']").click()
        driver.find_element(By.XPATH,"//a[normalize-space()='Logout']").click()



    def createAppointment():
        driver.find_element(By.XPATH, "//i[@class='fa fa-bars']").click()
        driver.find_element(By.XPATH, "//a[normalize-space()='Login']").click()
        driver.find_element(By.NAME, "username").send_keys("John Doe")
        driver.find_element(By.XPATH, "//input[@id='txt-password']").send_keys("ThisIsNotAPassword")
        driver.find_element(By.XPATH, "//button[@id='btn-login']").click()
        selectOption=Select(driver.find_element(By.XPATH,"//select[@id='combo_facility']"))
        ExpectedFacility="Tokyo CURA Healthcare Center"
        selectOption.select_by_visible_text(ExpectedFacility)
        ExpectedHospitalReadmission="Yes"
        driver.find_element(By.XPATH,"//input[@id='chk_hospotal_readmission']").click()
        ExpHealthprog="Medicare"
        driver.find_element(By.XPATH,"//input[@id='radio_program_medicare']").click()
        ExpDate="01/03/2024"
        driver.find_element(By.XPATH,"//input[@id='txt_visit_date']").send_keys(ExpDate)
        ExpComment="Have been suffering from back pain. need treatment to cure my issue."
        driver.find_element(By.XPATH,"//textarea[@id='txt_comment']").send_keys(ExpComment)
        driver.find_element(By.XPATH,"//button[@id='btn-book-appointment']").click()
        actualFacility=driver.find_element(By.XPATH,"//*[@id='facility']").text
        actualApplyforHospitalReadmission=driver.find_element(By.XPATH,"//*[@id='hospital_readmission']").text
        actHealthcareprogram=driver.find_element(By.XPATH,"//*[@id='program']").text
        actualDate=driver.find_element(By.XPATH,"//*[@id='visit_date']").text
        actualComment=driver.find_element(By.XPATH,"//*[@id='comment']").text
        if (actualFacility==ExpectedFacility and actualApplyforHospitalReadmission==ExpectedHospitalReadmission and actHealthcareprogram==ExpHealthprog and actualDate==ExpDate and actualComment==ExpComment):
            print("Iteration-2 output: Booking confirmed with valid data")
        else:
            print("Iteration-2 output: Booking not confirmed")

        driver.find_element(By.XPATH, "//i[@class='fa fa-bars']").click()
        driver.find_element(By.XPATH, "//a[normalize-space()='Logout']").click()


    def loginByInvalidCredentials():
            try:
                driver.find_element(By.XPATH, "//i[@class='fa fa-bars']").click()
                driver.find_element(By.XPATH, "//a[normalize-space()='Login']").click()
                driver.find_element(By.NAME, "username").send_keys("Abc")
                driver.find_element(By.XPATH, "//input[@id='txt-password']").send_keys("123")
                driver.find_element(By.XPATH, "//button[@id='btn-login']").click()
                selectOption=Select(driver.find_element(By.XPATH,"//select[@id='combo_facility']"))
            except:
                print("iteration-3 output: Provide valid credentials")
    def tryToGetAppointmentOnPastDate():
                driver.find_element(By.XPATH, "//i[@class='fa fa-bars']").click()
                driver.find_element(By.XPATH, "//a[normalize-space()='Login']").click()
                driver.find_element(By.NAME, "username").send_keys("John Doe")
                driver.find_element(By.XPATH, "//input[@id='txt-password']").send_keys("ThisIsNotAPassword")
                driver.find_element(By.XPATH, "//button[@id='btn-login']").click()
                selectOption = Select(driver.find_element(By.XPATH, "//select[@id='combo_facility']"))
                selectOption.select_by_visible_text("Tokyo CURA Healthcare Center")
                driver.find_element(By.XPATH, "//input[@id='chk_hospotal_readmission']").click()
                driver.find_element(By.XPATH, "//input[@id='radio_program_medicare']").click()
                msg = driver.find_element(By.XPATH, "//input[@id='txt_visit_date']").send_keys("01/09/2020")
                driver.find_element(By.XPATH, "//textarea[@id='txt_comment']").send_keys(
                    "Have been suffering from back pain. need treatment to cure my issue.")
                driver.find_element(By.XPATH, "//button[@id='btn-book-appointment']").click()
                print("iteration-4 output:Past dates are being accepted for appointments")
                driver.find_element(By.XPATH, "//i[@class='fa fa-bars']").click()
                driver.find_element(By.XPATH, "//a[normalize-space()='Logout']").click()


Login=curaHealthCare
Login.loginByProvidingValidCredentials()
Login.createAppointment()

invalidLogin=curaHealthCare
invalidLogin.loginByInvalidCredentials()
invalidDate=curaHealthCare
invalidDate.tryToGetAppointmentOnPastDate()
